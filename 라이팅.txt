면 법선 = 한 다각형(한 면)이 향하고 있는 방향을 나타내는 단위 벡터( 다각형의 모든 점에 수직인 단위벡터 )

표면 법선 = 표면의 한 점의 접하는 가상의 평면의 수직인 벡터(표면의 한점이 바라보는 방향)

정점법선 = 표면법선을 결정하는 점을 삼각형의 정점 즉, 세 꼭지점에만 지정해서 만든 법선 (일반적으로 많이 쓰인다.)

레스터 과정에서 세 정점 법선의 보간을 하여 표면의 점의 법선이 탄생한다.

퐁 조명(픽셀별 조명) = 법선의 보간과 조명 계산을 픽셀 단위로 하는 것( 품질 높음, 비용 비쌈 )


n = 법선벡터 p = 점 t = 스칼라
보간을 통한 가운데 정점 법선의 공식 (이거는 한점에 대한 2차원으로 구한 법선벡터이다.)
n = n0 + t(n1 - n0) 
여기서 t는 p = p0 + t(p1 - p0) 이다  p1의 법선 벡터 = n1, p0 = n1

n = (u × v / || u × v ||) 한 삼각형에 대한 법선

하지만 이 정점은 다른 다각형과 공유를 하고 있다. 해서 평균치를 구해서 정점의 법선 벡터를 구해야 제대로된 법선 벡터가 만들어진다.

구하는 방법

N0 + ~ + Nn / ||N0 + ~ + Nn|| 로 하면 평균치를 구할수 있다. 어차피 이 정점에는 한 면의 법선 벡터가 들어가 있었을 것이다. 그것들을 다른 정점 법선 벡터 구할때 더한 것
더하면 크기가 커지므로 정규화를 하는 것이다. (방향만 필요)

A = (a,b,c); 직선 벡터

B = (d,e,f); 법선 벡터

A ' B = 0

벡터 B를 행렬로 변환 B(t) = 전치행렬            행 기반 행렬을 전치 변환하면 열 기반 행렬로 바뀐다. 그렇게 곱하면 내적하는것과 같은 곱셈이 됨

AB(t) = 0;

Ax ' B(x(-1))(t) = 0;

정리하자면 , 
한 직선 벡터와 직교인 법선벡터가 있을때

직선 벡터 A에다가 임의의 행렬로 변환을 하면 Ax = A1x - A2x 가 된다.

이렇게 되면 법선 벡터 B는 더이상 직교가 되지 않는다.

만약 직교를 하려면 법선벡터를 변환해야 한다.

그 방법은 변환행렬 (x(-1))(t)을 곱해서 변환을 하는 것이다. 그러면 직교가 된다. 변환행렬 x에 역 행렬에 전치행렬

람베르트의 코사인 법칙

= 법선벡터와 반사광과의 각도가 0도 일때 제일 쌔고 90도보다 크면 빛의 세기를 0으로 하는 법칙

코사인 법칙이라는 것은 법선벡터와 반사광과의 내적으로 각도를 구하기 때문  사실상 내적값은 방향벡터를 계산할때는 cos을 구하는것과 마찬가지

분산광 = 반사된 빛이 사방으로 흩어지는 현상 / 시점을 고려할 필요가 없다 (어디서든지 보임)

계산 고려 = 분산광의 색상 , 표면의 재질 색상

분산광 계산 = 빛의 색과 재질의 색을 외적한 후 그것에 람베르트의 코사인 법칙을 이용해서 만들어진 각도를 곱한다.

주변광 = 주변광에 색과 재질 색을 외적한다. 분산광과 덧셈을 하면 합친 빛의 세기가 나온다.

반영광 = 분산광처럼 모든 방향으로 빛이 흩어지는게 아니라 한쪽 특정한 원뿔방향으로 반사된다.

반사벡터와 시점벡터 사이에 각도가 작을 수록 빛이 눈에 더 많이 들어온다. (빛의 세기 결정)

시점에 따라서 안보일수도 있다.

시점 벡터 = 카메라 - 반사되는 점 / || 카메라 - 반사되는 점 ||
